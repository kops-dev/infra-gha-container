name: Build and Push Image

on:
  push:
    tags:
      - "go-*"
      - "deployments-*"


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kops-dev/infra-gha-container

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:

  build-and-push-deployment-image:

    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Extract Release Tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Extract directory
        id: extract_string
        run: |
          full_string="${{ env.RELEASE_VERSION }}"
          IFS='-' read -ra parts <<< "$full_string"
          echo "Extracted string: ${parts[0]}"
          echo "directory=${parts[0]}">> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ${{ env.directory }}/.
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: PAT=${{ secrets.PAT }}
